# Use two appenders, one to log to console, another to log to a file
#Set level All,debug,info,warn,error,fatal,off
#Define the log level: Primarily there are five kinds of log levels
#All - This level of logging will log everything ( it turns all the logs on )
#DEBUG \u2013 print the debugging information and is helpful in development stage
#INFO \u2013 print informational message that highlights the progress of the application
#WARN \u2013 print information regarding faulty and unexpected system behavior.
#ERROR \u2013 print error message that might allow system to continue
#FATAL \u2013 print system critical information which are causing the application to crash
#TRACE
#OFF \u2013 No logging
#Log levels have following order TRACE < DEBUG < INFO < WARN < ERROR < FATAL.

#Application Logger
log4j.rootLogger=DEBUG,file
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=./src/test/resources/logs/system.log
log4j.appender.file.maxFileSize=2MB
log4j.appender.file.maxBackupIndex=5
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{ISO8601} %5p : %L --  %m%n
log4j.appender.file.Append=false

# WebLogs to File
log4j.logger.webLogger=DEBUG,dest1,console
log4j.appender.dest1=org.apache.log4j.RollingFileAppender
log4j.appender.dest1.maxFileSize=900KB
log4j.appender.dest1.maxBackupIndex=6
log4j.appender.dest1.layout=org.apache.log4j.PatternLayout
log4j.appender.web.layout.ConversionPattern=%d{ISO8601} %5p : %L --  %m%n
log4j.appender.dest1.File=./src/test/resources/logs/application.log
log4j.appender.dest1.Append=false


# Appender which writes to console
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.Target=System.out
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d{dd/MM/yyyy HH:mm:ss} %c %m%n
#log4j.appender.console.layout.ConversionPattern=%d{MM-dd-yyyy HH:mm:ss} %F %-5p [%t] %c{2} %L - %m%n